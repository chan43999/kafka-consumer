# Default values for kafka-consumer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
configmap: |-
  logging:
    level:
      root: DEBUG
  app:
    delay: 30
  spring:
    jmx:
      enabled: true
    config:
      activate:
        on-profile: kubernetes
    kafka:
      listener:
        concurrency: 5
      consumer:
        bootstrap-servers: kafka-boostrap-2436716-sng01.clb.appdomain.cloud:9093
        topics: user-info
        client-id: '${pod.name}_${pod.namespace}_${pod.id}'
        properties:
          enable.auto.commit: true
          fetch.min.bytes: 100000
          fetch.max.wait.ms: 500
          max.poll.records: 500
          max.partition.fetch.bytes: 50000000
      producer:
        acks: all
        bootstrap-servers: prod-3-brokers-kafka-bootstrap.event-stream.svc:9092
        topic: perftest
        properties:
          acks: 1
          security.protocol: SASL_PLAINTEXT
          sasl.mechanism: SCRAM-SHA-512
          linger.ms: 10
          batch.size: 100000
          buffer.memory: 93554432
          sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="springboot-kafka" password="L8gGvoe7aotS";
  management:
    endpoint:
      health:
        show-details: ALWAYS
      restart:
        enabled: true
    endpoints:
      web:
        exposure:
          include: 'health,info,prometheus,metrics,env'



replicaCount: 50

image:
  repository: quay.io/linxianer12/kafka-consumer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.0.25

imagePullSecrets:
  - name: quay
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    route.openshift.io/termination: "edge"
  hosts:
    - host: kafka-consumer.itzroks-666000ldq2-6xuhwd-4b4a324f027aea19c5cbc0c3275c4656-0000.hkg02.containers.appdomain.cloud
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []


resources:
   limits:
     cpu: 1
     memory: 768Mi
   requests:
     cpu: 300m
     memory: 768Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
